# PostgreSQL. Versions 9.3 and up are supported.
#
# Install the pg driver:
#   gem install pg
# On macOS with Homebrew:
#   gem install pg -- --with-pg-config=/usr/local/bin/pg_config
# On Windows:
#   gem install pg
#       Choose the win32 build.
#       Install PostgreSQL and put its /bin directory on your path.
#
# Configure Using Gemfile
# gem "pg"
#
default: &default
  adapter: postgresql
  encoding: unicode
  host: localhost
  username: postgres
  password: Destiny765
  pool: 5
  timeout: 5000
  port: 5432

development:
  <<: *default
  database: pc_build_advisor_development

test:
  <<: *default
  database: pc_build_advisor_test

production:
  <<: *default
  database: pc_build_advisor_production
  username: pc_build_advisor
  password: <%= ENV['PC_BUILD_ADVISOR_DATABASE_PASSWORD'] %>


# As with config/credentials.yml, you never want to store sensitive information,
# like your database password, in your source code. If your source code is
# ever seen by anyone, they now have access to your database.
#
# Instead, provide the password or a full connection URL as an environment
# variable when you boot the app. For example:
#
#   DATABASE_URL="postgres://myuser:mypass@localhost/somedatabase"
#
# If the connection URL is provided in the special DATABASE_URL environment
# variable, Rails will automatically merge its configuration values on top of
# the values provided in this file. Alternatively, you can specify a connection
# URL environment variable explicitly:
#
#   production:
#     url: <%= ENV["MY_APP_DATABASE_URL"] %>
#
# Read https://guides.rubyonrails.org/configuring.html#configuring-a-database
# for a full overview on how database connection configuration can be specified.
#
#production:
#  primary: &primary_production
  #  <<: *default
#    database: pc_build_advisor_api_production
#    username: pc_build_advisor_api
#    password: <%= ENV["PC_BUILD_ADVISOR_API_DATABASE_PASSWORD"] %>
#  cache:
#    <<: *primary_production
#    database: pc_build_advisor_api_production_cache
#    migrations_paths: db/cache_migrate
#  queue:
#    <<: *primary_production
#    database: pc_build_advisor_api_production_queue
#    migrations_paths: db/queue_migrate
#  cable:
#    <<: *primary_production
#    database: pc_build_advisor_api_production_cable
  #  migrations_paths: db/cable_migrate
